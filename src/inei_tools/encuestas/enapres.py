from enum import Enum


class Enapres(Enum):
    """Acceder a mÃ³dulos de Enapres de forma pythonica (con autocompletado)"""
    M100_CARACTERISTICAS_VIVIENDA_Y_HOGAR = "100"
    M200_CARACTERISTICAS_RESIDENTES_HOGAR = "200"
    M300_DISCAPACIDAD_PROGRAMAS_SOCIALES_EDUCACION_ETNIA_GENERO = "300"
    M500_TELECOMUNICACION = "500"
    M600_SEGURIDAD_CIUDADANA = "600"
    M700_SALUD = "700"
    M800_SEGURIDAD_VIAL = "800"
    M800A_PATRIMONIO_SERVICIOS_BIENES_CULTURALES = "800A"
    M900_ATENCION_INCENDIOS_INFRAESTRUCTURA_DESASTRES = "900"
    M1000_PROTECCION_CONSUMIDOR = "1000"
    M100AB_TV_PERU_RADIO_NACIONAL = "100AB"
    M100D_MEDIO_AMBIENTE_PROTECCION_CONSUMIDOR = "100D"
    M200A_CARACTERISTICAS_MIGRATORIAS_REMESAS = "200A" 

    # YEAR_TO_ENCUESTA = {
    #     "2024": "965",
    #     "2023": "903",
    #     "2022": "785",
    #     "2021": "761",
    #     "2020": "736",
    #     "2019": "684",
    #     "2018": "626",
    #     "2017": "596",
    #     "2016": "544",
    # }

    # MODULE_YEAR_TO_ENCUESTA = {
    #     "100": {
    #         "2024": "1856",
    #         "2023": "1815",
    #         "2022": "1727",
    #         "2021": "1675",
    #         "2020": "1618",
    #         "2019": "1490",
    #         "2018": "1370",
    #         "2017": "1235",
    #         "2016": "1073",
    #     },
    #     "200": {
    #         "2024": "1857",
    #         "2023": "1816",
    #         "2022": "1728",
    #         "2021": "1676",
    #         "2020": "1619",
    #         "2019": "1491",
    #         "2018": "1371",
    #         "2017": "1236",
    #         "2016": "1074",
    #     },
    #     "300": {
    #         "2024": "1858",
    #         "2023": "1817",
    #         "2022": "1729",
    #         "2021": "1677",
    #         "2020": "1620",
    #         "2019": "1492",
    #         "2018": "1372",
    #         "2017": "1237",
    #         "2016": "1075",
    #     },
    #     "400": {
    #         "2024": "1859",
    #         "2023": "1818",
    #         "2022": "1730",
    #         "2021": "1678",
    #         "2020": "1621",
    #         "2019": "1493",
    #         "2018": "1373",
    #         "2017": "1238",
    #         "2016": "1076",
    #     },
    #     "500": {
    #         "2024": "1860",
    #         "2023": "1819",
    #         "2022": "1731",
    #         "2021": "1679",
    #         "2020": "1622",
    #         "2019": "1494",
    #         "2018": "1374",
    #         "2017": "1239",
    #         "2016": "1077",
    #     },
    #     "600": {
    #         "2024": "1861",
    #         "2023": "1820",
    #         "2022": "1732",
    #         "2021": "1680",
    #         "2020": "1623",
    #         "2019": "1495",
    #         "2018": "1375",
    #         "2017": "1240",
    #         "2016": "1078",
    #     },
    #     "700": {
    #         "2024": "1862",
    #         "2023": "1821",
    #         "2022": "1733",
    #         "2021": "1681",
    #         "2020": "1624",
    #         "2019": "1496",
    #         "2018": "1376",
    #         "2017": "1241",
    #         "2016": "1079",
    #     },
    #     "800": {
    #         "2024": "1863",
    #         "2023": "1822",
    #         "2022": "1734",
    #         "2021": "1682",
    #         "2020": "1625",
    #         "2019": "1497",
    #         "2018": "1377",
    #         "2017": "1242",
    #         "2016": "1080",
    #     },
    #     "900": {
    #         "2024": "1864",
    #         "2023": "1823",
    #         "2022": "1735",
    #         "2021": "1683",
    #         "2020": "1626",
    #         "2019": "1498",
    #         "2018": "1378",
    #         "2017": "1243",
    #         "2016": "1081",
    #     },
    #     "1000": {
    #         "2024": "1865",
    #         "2023": "1824",
    #         "2022": "1736",
    #         "2021": "1684",
    #         "2020": "1627",
    #         "2019": "1499",
    #         "2018": "1379",
    #         "2017": "1244",
    #         "2016": "1082",
    #     }
    # }

    # @classmethod
    # def get_encuesta_code(cls, anio: str) -> str:
    #     return cls.YEAR_TO_ENCUESTA.value[anio]
    
    # @classmethod
    # def get_module_code(cls, modulo: str, anio: str) -> str:
    #     return cls.MODULE_YEAR_TO_ENCUESTA.value[modulo][anio]
    